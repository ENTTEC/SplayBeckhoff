<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{358af246-0b07-4be0-a747-cf9137ce1e6c}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	// Configure JSON and HTTP function blocks 
	fbJson					: FB_JsonDomParser;
	fbHttpClient 			: FB_IotHttpClient:=(
								sHostName:='192.168.0.10',			// Replace with your SPLAY's IP address
								nHostPort:=80,
								bKeepAlive:=TRUE,
								tConnectionTimeout:=T#10S,
								stTLS:=(
									bNoServerCertCheck:=FALSE
								)
							);
							
	// Configure SPLAY function block
	SPLAY					: FB_SPLAY:=(
								fbJson:=fbJson,
								fbHttpClient:=fbHttpClient
							);

	// Main program variables
	nState					: INT:=1;
	jsonReceived			: sJsonValue;
	sReceived				: STRING(10000);		// Output buffer can be any length. Please be aware that some requests in particular will
													// require a larger return/output buffer compared to others, adjust accordingly.
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* 
 * ENTTEC_SPLAY_API LIBRARY EXAMPLES
 *
 *  Commands follow the same naming convention found on the Official SPLAY API.
 *  For additional support, see https://github.com/ENTTEC/SplayApi
 *
 *  The following examples briefly describe the function block usage:
 * 	1: 	Get device information
 *  2: 	Create/update playlist
 *  3: 	Create/save cue
 * 	4: 	Play playlist
 *  5: 	Get cue
*)

CASE nState OF
	
	1:
		// Example 'GET_INFO' command usage
		
		SPLAY.GET_INFO();										// Example of command with no additional parameters
		fbJson.CopyDocument(sReceived, SIZEOF(sReceived));		// Convert JSON object to string output buffer
		ADSLOGSTR(												// Print JSON string to console log
			msgCtrlMask:=ADSLOG_MSGTYPE_STRING,					//  (note: console has a 350 character buffer,
			msgFmtStr:='%s',									//         and will not print for longer messages)
			strArg:=sReceived							
		);
		
		nState:=2;
		
	2:
		// Example 'UPDATE_PLAYLIST' command usage
		
		SPLAY.UPDATE_PLAYLIST(sPlaylist:='{"duration":312000,"timeline":{"track1":{"intensity":100,"cues":[{"start":300000,"name":"Bar Lighting Loop","cue_id":1,"duration":12000,"type":0,"fade":{"in":2000,"out":1500}}]}},"order":1,"intensity":100,"loop":0,"priority":100,"group":0,"start_trigger":{"trigger_id":-1},"stop_trigger":{"trigger_id":-1},"fade_in":3000,"fade_out":2000,"name":"Bar Playlist 1"}');
		fbJson.CopyDocument(sReceived, SIZEOF(sReceived));
		ADSLOGSTR(											
			msgCtrlMask:=ADSLOG_MSGTYPE_STRING,					
			msgFmtStr:='%s',
			strArg:=sReceived				
		);

		nState:=3;
		
	3: 
		// Example 'SAVE_CUE' command usage
		
		SPLAY.SAVE_CUE(sCue:='{"config":{"ch_start":0,"ch_stop":511,"source":1,"universes":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],"trigger":{"type":0}},"cue_id":1,"duration":0,"framesname":"Bar Lighting Loop","type":0}');
		fbJson.CopyDocument(sReceived, SIZEOF(sReceived));
		ADSLOGSTR(												
			msgCtrlMask:=ADSLOG_MSGTYPE_STRING,					
			msgFmtStr:='%s',
			strArg:=sReceived				
		);
		
		nState:=4;
		
	4: 
		// Example 'PLAY' command usage
		
		SPLAY.PLAY(nPlaylistId:=1);								
		fbJson.CopyDocument(sReceived, SIZEOF(sReceived));
		ADSLOGSTR(												
			msgCtrlMask:=ADSLOG_MSGTYPE_STRING,					
			msgFmtStr:='%s',
			strArg:=sReceived					
		);
		
		nState:=5;
		
	5: 
		// Example 'GET_CUE' command usage
		
		SPLAY.GET_CUE(nCueId:=1);
		fbJson.CopyDocument(sReceived, SIZEOF(sReceived));
		ADSLOGSTR(													// Since the return is longer than 350 characters,
			msgCtrlMask:=ADSLOG_MSGTYPE_STRING,						// there will be no output in the console log. 
			msgFmtStr:='%s',
			strArg:=sReceived				
		);															// Try this instead:
		jsonReceived:=fbJson.FindMember(SPLAY.jsonRX, 'cue');		// Search for and return node labelled 'cue'
		jsonReceived:=fbJson.FindMember(jsonReceived, 'name');		// Search for and return node labelled 'name'
		sReceived:=fbJson.GetString(jsonReceived);					// Get string value of specified node
		ADSLOGSTR(													
			msgCtrlMask:=ADSLOG_MSGTYPE_STRING,						 
			msgFmtStr:='%s',
			strArg:=sReceived			
		);
		
		nState:=6;
		
END_CASE

]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="35" Count="1" />
      <LineId Id="45" Count="8" />
      <LineId Id="184" Count="0" />
      <LineId Id="55" Count="74" />
      <LineId Id="171" Count="3" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>